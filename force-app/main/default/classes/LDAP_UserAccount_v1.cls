/**************************************************
Description:    Class to call out to LDAP. Generated by wsdl2apex
History:
--------------------------------------------------
2019-06-27  ajudd@salesforce.com            Changed to use named credential for auth to URL2 custom setting field
2019-07-29  ajudd@salesforce.com            In queryUserAccount changed to field to get CNumber from CustomerNumber to UserAccountId
**************************************************/

public class LDAP_UserAccount_v1 {

    //removed to use Custom Setting BAMLDAPEndpoint
    //public static String LDAP_ENDPOINT = 'https://webapi-ptestext.npe.auspost.com.au/ptest/Services/UserAccount_v1/QueryUserAccount';

    // removed to use Named Credentials
    //public static String CERTIFICATE_NAME = 'Auspost_API_Cert';

    public static String CS_BAM_LDAP_USERACCOUNT = 'BAM_LDAP_USERACCOUNT';
    public static String XMLNS_DATAMODEL = 'http://www.auspost.com.au/Schema/CommonDataModel/Common:v1';
    public static String XMLNS_USERACCOUNT = 'http://www.auspost.com.au/Schema/CommonDataModel/Operations/UserAccount:v1';
    public static String XMLNS_NAMESPACE = 'http://schemas.xmlsoap.org/soap/envelope/';

    private static String makeRandomString(Integer len) {
        String sResult = '';
        for (Integer i = 0; i < len; ++i) {
            sResult += Math.round(Math.random() * 10);
        }
        return sResult;
    }

    /**
     *
     *
     * @param userAccountId
     * @param userName
     *
     * @return Cnumber if found, else null
     */
    public static String queryUserAccount(String userAccountId, String userName) {
        String soapAction = '/Services/UserAccount_v1/queryUserAccount_v1';

        String interfaceName = 'queryCustomer';

        // create the payload
        String sPayload = '<soapenv:Envelope xmlns:soapenv="' + XMLNS_NAMESPACE + '" ' +
                'xmlns:com="' + XMLNS_DATAMODEL + '" ' +
                'xmlns:user="' + XMLNS_USERACCOUNT + '">';
        sPayload += '<soapenv:Header>';
        sPayload += '<com:InterfaceHeader>';
        sPayload += '<com:InterfaceName>' + interfaceName + '</com:InterfaceName>';
        sPayload += '<com:InterfaceVersion>1.0</com:InterfaceVersion>';
        sPayload += '<com:MessageType>Request</com:MessageType>';

        // don't know what to send here, sample was a random number of 1005115964
        sPayload += '<com:BusinessReferenceID>' + LDAP_UserAccount_v1.makeRandomString(10) + '</com:BusinessReferenceID>';
        sPayload += '<com:SourceSystemID>Salesforce</com:SourceSystemID>';
        sPayload += '<com:SourceInformation>SFDC</com:SourceInformation>';
        sPayload += '<com:Timestamp>' + Datetime.now().formatGmt('yyyy-MM-dd\'T\'HH:mm:ssXXX') + '</com:Timestamp>';
        sPayload += '</com:InterfaceHeader>';
        sPayload += '</soapenv:Header>';
        sPayload += '<soapenv:Body>';
        sPayload += '<user:queryUserAccount>';
        if (userAccountId != null && userAccountId != '')
            sPayload += '<user:UserAccountID>' + userAccountId + '</user:UserAccountID>';
        if (userName != null && userName != '')
            sPayload += '<user:UserName>' + userName + '</user:UserName>';
        sPayload += '</user:queryUserAccount>';
        sPayload += '</soapenv:Body>';
        sPayload += '</soapenv:Envelope>';

        System.debug('sPayload = ');
        System.debug(sPayload);

        HttpRequest req = new HttpRequest();

        // using custom setting
        AusPostSettings__c cs = AusPostSettings__c.getValues(CS_BAM_LDAP_USERACCOUNT);
        System.debug('LDAP_UserAccount_v1 Endpoint:' + cs.URL2__c);
        req.setEndpoint(cs.URL2__c);
        req.setBody(sPayload);
        req.setHeader('accept', 'text/xml');
        req.setHeader('cache-control', 'no-cache');
        req.setHeader('pragma', 'no-cache');
        req.setHeader('Content-Type', 'text/xml; charset=UTF-8');
        req.setHeader('sfdc_stack_depth', '1');
        req.setHeader('connection', 'keep-alive');
        req.setHeader('user-agent', 'SFDC-Callout/46.0');
        req.setHeader('content-length', '' + sPayload.length());
        req.setHeader('SoapAction', soapAction);
        //req.setHeader('BusinessReferenceID', '12345');
        req.setMethod('POST');
        //req.setClientCertificateName(LDAP_UserAccount_v1.CERTIFICATE_NAME);

        Http httpHandle = new Http();
        HttpResponse response = httpHandle.send(req);
        Integer statusCode = response.getStatusCode();
        System.debug('LDAP_UserAccount_v1:: response:' + response.toString());
        System.debug('LDAP_UserAccount_v1:: status code:' + statusCode);
        System.debug('LDAP_UserAccount_v1:: response body :' + response.getBody());

        if (500 == statusCode) {
            return null;
        } else {
            String responseBody = response.getBody();
            return getCNumberFromResponse(responseBody);
        }
    }

    private static String getCNumberFromResponse(String responseBody)
    {
        if(null != responseBody && '' != responseBody)
        {
            Dom.Document doc = new Dom.Document();
            doc.load(responseBody);
            Dom.XmlNode root = doc.getRootElement();

            Dom.XmlNode nodeBody = root.getChildElement('Body', XMLNS_NAMESPACE);
            if (null != nodeBody) {
                Dom.XmlNode nodeQueryAccountResponse = nodeBody.getChildElement('queryUserAccountResponse', XMLNS_USERACCOUNT);

                if (null != nodeQueryAccountResponse) {
                    Dom.XmlNode nodeUserAccount = nodeQueryAccountResponse.getChildElement('UserAccount', XMLNS_USERACCOUNT);
                    if (null != nodeUserAccount) {
                        //AJ 29.07.2019 Changed from CustomerNumber to UserAccountID
                        Dom.XmlNode nodeCNumber = nodeUserAccount.getChildElement('UserAccountID', XMLNS_USERACCOUNT);
                        if (null != nodeCNumber) {
                            System.debug('CNo = ' + nodeCNumber.getText());
                            return nodeCNumber.getText();
                        }
                    }
                }
            }
        }
        return null;
    }


    /*
    public static String testParsing()
    {
        String responseBody = '<?xml version="1.0" encoding="UTF-8"?><SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">' +
                '<SOAP-ENV:Header>' +
                '<ns:InterfaceHeader xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns="http://www.auspost.com.au/Schema/CommonDataModel/Common:v1" xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/">' +
                '<ns:InterfaceName>UserAccount</ns:InterfaceName>' +
                '<ns:InterfaceVersion>1.1</ns:InterfaceVersion>' +
                '<ns:MessageType>Reply</ns:MessageType>' +
                '<ns:BusinessReferenceID>5855911993</ns:BusinessReferenceID>' +
                '<ns:SourceSystemID>TIBCOESB</ns:SourceSystemID><ns:Timestamp>2019-06-07T11:43:04.53+10:00</ns:Timestamp>' +
                '</ns:InterfaceHeader>' +
                '</SOAP-ENV:Header>' +
                '<SOAP-ENV:Body>' +
                '<ns0:queryUserAccountResponse xmlns:ns0="http://www.auspost.com.au/Schema/CommonDataModel/Operations/UserAccount:v1">' +
                '<ns0:UserAccount>' +
                '<ns0:UserName>ManojKoova</ns0:UserName>' +
                '<ns0:UserAccountID>C00011910744</ns0:UserAccountID>' +
                '<ns0:CustomerNumber>C1234567</ns0:CustomerNumber>' +
                '<ns0:EmailID>manoj.koova@auspost.com.au</ns0:EmailID>' +
                '<ns0:FirstName>Manoj</ns0:FirstName>' +
                '<ns0:LastName>Koova</ns0:LastName>' +
                '<ns0:isActive>true</ns0:isActive>' +
                '</ns0:UserAccount>' +
                '<ns0:ReturnMessage>' +
                '<ns0:Code>ESB-30000</ns0:Code>' +
                '<ns0:Description>FinishedOK</ns0:Description>' +
                '</ns0:ReturnMessage>' +
                '</ns0:queryUserAccountResponse>' +
                '</SOAP-ENV:Body>' +
                '</SOAP-ENV:Envelope>';


        Dom.Document doc = new Dom.Document();
        doc.load(responseBody);
        Dom.XmlNode root = doc.getRootElement();

        Dom.XmlNode nodeBody = root.getChildElement('Body', XMLNS_NAMESPACE);
        if(null != nodeBody)
        {
            Dom.XmlNode nodeQueryAccountResponse = nodeBody.getChildElement('queryUserAccountResponse', XMLNS_USERACCOUNT);

            if(null != nodeQueryAccountResponse)
            {
                Dom.XmlNode nodeUserAccount = nodeQueryAccountResponse.getChildElement('UserAccount', XMLNS_USERACCOUNT);
                if(null != nodeUserAccount)
                {
                    Dom.XmlNode nodeCNumber = nodeUserAccount.getChildElement('CustomerNumber', XMLNS_USERACCOUNT);
                    if(null != nodeCNumber)
                    {
                        System.debug('CNo = ' + nodeCNumber.getText());
                        return nodeCNumber.getText();
                    }
                }
            }
        }
        return null;
    }


    public static void testEndpoint()
    {
        String sPayload = '<?xml version="1.0" encoding="UTF-8"?><env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><env:Header /><env:Body><queryUserAccount xmlns="http://www.auspost.com.au/Schema/CommonDataModel/Operations/UserAccount:v1"><UserAccountID></UserAccountID><UserName>tom@ap.com.au</UserName></queryUserAccount></env:Body></env:Envelope>';

        sPayload = '<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:com="http://www.auspost.com.au/Schema/CommonDataModel/Common:v1" xmlns:user="http://www.auspost.com.au/Schema/CommonDataModel/Operations/UserAccount:v1">';
        sPayload += '<soapenv:Header>';
        sPayload += '<com:InterfaceHeader>';
        sPayload += '<com:InterfaceName>queryCustomer</com:InterfaceName>';
        sPayload += '<com:InterfaceVersion>1.0</com:InterfaceVersion>';
        sPayload += '<com:MessageType>Request</com:MessageType>';
        sPayload += '<com:BusinessReferenceID>1005115964</com:BusinessReferenceID>';
        sPayload += '<com:SourceSystemID>Salesforce</com:SourceSystemID>';
        sPayload += '<com:SourceInformation>SFDC</com:SourceInformation>';
        sPayload += '<com:Timestamp>2017-12-08T13:20:00-05:00</com:Timestamp>';
        sPayload += '</com:InterfaceHeader>';
        sPayload += '</soapenv:Header>';
        sPayload += '<soapenv:Body>';
        sPayload += '<user:queryUserAccount>';
        sPayload += '<user:UserName>ManojKoova</user:UserName>';
        sPayload += '</user:queryUserAccount>';
        sPayload += '</soapenv:Body>';
        sPayload += '</soapenv:Envelope>';

        HttpRequest req = new HttpRequest();
        req.setEndpoint('https://webapi-ptestext.npe.auspost.com.au/ptest/Services/UserAccount_v1/QueryUserAccount');
        req.setBody(sPayload);
        req.setHeader('accept', 'text/xml');
        req.setHeader('cache-control', 'no-cache');
        req.setHeader('pragma', 'no-cache');
        req.setHeader('Content-Type', 'text/xml; charset=UTF-8');
        req.setHeader('sfdc_stack_depth', '1');
        req.setHeader('SoapAction', '/Services/UserAccount_v1/queryUserAccount_v1');
        req.setHeader('content-length', '' + sPayload.length());
        req.setHeader('connection', 'keep-alive');
        req.setHeader('user-agent', 'SFDC-Callout/46.0');
        //req.setHeader('BusinessReferenceID', '12345');
        req.setMethod('POST');
        req.setClientCertificateName('Auspost_API_Cert');

        Http httpHandle = new Http();
        HttpResponse response = httpHandle.send(req);

        System.debug('response status:' + response.getStatus());
        System.debug('response status code:' + response.getStatusCode());
        System.debug('response body:' + response.getBody());
        System.debug('response complete :' + response.toString());
    }

     */



    /*
    public class UserAccountHTTPS11Binding_v1 {
        
        //public String endpoint_x = 'https://AUD63600CM:10220/Services/UserAccount_v1';
        //public String endpoint_x = 'https://webapi-ptestext.npe.auspost.com.au/ptest/Services/UserAccount_v1';
        public String endpoint_x = 'https://webapi-ptestext.npe.auspost.com.au/ptest/Services/UserAccount_v1/QueryUserAccount';
        //public String endpoint_x = 'https://ens8wvborx3nn.x.pipedream.net';
        public Map<String,String> inputHttpHeaders_x;
        public Map<String,String> outputHttpHeaders_x;
        public String clientCertName_x;
        public String clientCert_x;
        public String clientCertPasswd_x;
        public Integer timeout_x;
        public LDAP_CDM_Common_v1.InterfaceHeader SvcHeader;
        private String SvcHeader_hns = 'InterfaceHeader=http://www.auspost.com.au/Schema/CommonDataModel/Common:v1';
        private String[] ns_map_type_info = new String[]{'http://www.auspost.com.au/Schema/CommonDataModel/Operations/UserAccount:v1', 'LDAP_CDM_Operations_UserAccount_v1', 'http://www.auspost.com.au/Schema/CommonDataModel/Common:v1', 'LDAP_CDM_Common_v1', 'http://www.auspost.com.au/Schema/CommonDataModel/Core:v1', 'LDAP_CDM_Core_v1', 'http://www.auspost.com.au/Service/LDAPInterfaces/UserAccount:v1', 'LDAP_UserAccount_v1', 'http://www.auspost.com.au/Schema/CommonDataModel/Location:v1', 'LDAP_CDM_Location_v1'};
        public LDAP_CDM_Operations_UserAccount_v1.unlockUserAccountResponse_element unlockUserAccount_v1(String UserAccountID) {
            LDAP_CDM_Operations_UserAccount_v1.unlockUserAccount_element request_x = new LDAP_CDM_Operations_UserAccount_v1.unlockUserAccount_element();
            request_x.UserAccountID = UserAccountID;
            LDAP_CDM_Operations_UserAccount_v1.unlockUserAccountResponse_element response_x;
            Map<String, LDAP_CDM_Operations_UserAccount_v1.unlockUserAccountResponse_element> response_map_x = new Map<String, LDAP_CDM_Operations_UserAccount_v1.unlockUserAccountResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '/Services/UserAccount_v1/unlockUserAccount_v1',
              'http://www.auspost.com.au/Schema/CommonDataModel/Operations/UserAccount:v1',
              'unlockUserAccount',
              'http://www.auspost.com.au/Schema/CommonDataModel/Operations/UserAccount:v1',
              'unlockUserAccountResponse',
              'LDAP_CDM_Operations_UserAccount_v1.unlockUserAccountResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x;
        }
        public LDAP_CDM_Operations_UserAccount_v1.ReturnMessage_element deleteUserAccount_v1(String CustomerNumber,String UserAccountID,String UserName,Boolean OnlyInActive) {
            LDAP_CDM_Operations_UserAccount_v1.deleteUserAccount_element request_x = new LDAP_CDM_Operations_UserAccount_v1.deleteUserAccount_element();
            request_x.CustomerNumber = CustomerNumber;
            request_x.UserAccountID = UserAccountID;
            request_x.UserName = UserName;
            request_x.OnlyInActive = OnlyInActive;
            LDAP_CDM_Operations_UserAccount_v1.deleteUserAccountResponse_element response_x;
            Map<String, LDAP_CDM_Operations_UserAccount_v1.deleteUserAccountResponse_element> response_map_x = new Map<String, LDAP_CDM_Operations_UserAccount_v1.deleteUserAccountResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '/Services/UserAccount_v1/deleteUserAccount_v1',
              'http://www.auspost.com.au/Schema/CommonDataModel/Operations/UserAccount:v1',
              'deleteUserAccount',
              'http://www.auspost.com.au/Schema/CommonDataModel/Operations/UserAccount:v1',
              'deleteUserAccountResponse',
              'LDAP_CDM_Operations_UserAccount_v1.deleteUserAccountResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.ReturnMessage;
        }
        public LDAP_CDM_Operations_UserAccount_v1.createUserAccountResponse_element createUserAccount_v1(String UserName,String CustomerNumber,String EmailID,String FirstName,String LastName,String Password,Boolean isActive) {
            LDAP_CDM_Operations_UserAccount_v1.createUserAccount_element request_x = new LDAP_CDM_Operations_UserAccount_v1.createUserAccount_element();
            request_x.UserName = UserName;
            request_x.CustomerNumber = CustomerNumber;
            request_x.EmailID = EmailID;
            request_x.FirstName = FirstName;
            request_x.LastName = LastName;
            request_x.Password = Password;
            request_x.isActive = isActive;
            LDAP_CDM_Operations_UserAccount_v1.createUserAccountResponse_element response_x;
            Map<String, LDAP_CDM_Operations_UserAccount_v1.createUserAccountResponse_element> response_map_x = new Map<String, LDAP_CDM_Operations_UserAccount_v1.createUserAccountResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '/Services/UserAccount_v1/createUserAccount_v1',
              'http://www.auspost.com.au/Schema/CommonDataModel/Operations/UserAccount:v1',
              'createUserAccount',
              'http://www.auspost.com.au/Schema/CommonDataModel/Operations/UserAccount:v1',
              'createUserAccountResponse',
              'LDAP_CDM_Operations_UserAccount_v1.createUserAccountResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x;
        }
        public LDAP_CDM_Operations_UserAccount_v1.updateUserAccountResponse_element updateUserAccount_v1(String UserName,String UserAccountID,String CustomerNumber,String EmailID,String FirstName,String LastName,String Password) {
            LDAP_CDM_Operations_UserAccount_v1.updateUserAccount_element request_x = new LDAP_CDM_Operations_UserAccount_v1.updateUserAccount_element();
            request_x.UserName = UserName;
            request_x.UserAccountID = UserAccountID;
            request_x.CustomerNumber = CustomerNumber;
            request_x.EmailID = EmailID;
            request_x.FirstName = FirstName;
            request_x.LastName = LastName;
            request_x.Password = Password;
            LDAP_CDM_Operations_UserAccount_v1.updateUserAccountResponse_element response_x;
            Map<String, LDAP_CDM_Operations_UserAccount_v1.updateUserAccountResponse_element> response_map_x = new Map<String, LDAP_CDM_Operations_UserAccount_v1.updateUserAccountResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '/Services/UserAccount_v1.serviceagent//updateUserAccount_v1',
              'http://www.auspost.com.au/Schema/CommonDataModel/Operations/UserAccount:v1',
              'updateUserAccount',
              'http://www.auspost.com.au/Schema/CommonDataModel/Operations/UserAccount:v1',
              'updateUserAccountResponse',
              'LDAP_CDM_Operations_UserAccount_v1.updateUserAccountResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x;
        }
        public LDAP_CDM_Operations_UserAccount_v1.ReturnMessage_element changeUserAccountPassword_v1(String UserAccountID,String OldPassword,String NewPassword) {
            LDAP_CDM_Operations_UserAccount_v1.changeUserAccountPassword_element request_x = new LDAP_CDM_Operations_UserAccount_v1.changeUserAccountPassword_element();
            request_x.UserAccountID = UserAccountID;
            request_x.OldPassword = OldPassword;
            request_x.NewPassword = NewPassword;
            LDAP_CDM_Operations_UserAccount_v1.changeUserAccountPasswordResponse_element response_x;
            Map<String, LDAP_CDM_Operations_UserAccount_v1.changeUserAccountPasswordResponse_element> response_map_x = new Map<String, LDAP_CDM_Operations_UserAccount_v1.changeUserAccountPasswordResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '/Services/UserAccount_v1.serviceagent//changeUserAccountPassword_v1',
              'http://www.auspost.com.au/Schema/CommonDataModel/Operations/UserAccount:v1',
              'changeUserAccountPassword',
              'http://www.auspost.com.au/Schema/CommonDataModel/Operations/UserAccount:v1',
              'changeUserAccountPasswordResponse',
              'LDAP_CDM_Operations_UserAccount_v1.changeUserAccountPasswordResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.ReturnMessage;
        }
        public LDAP_CDM_Operations_UserAccount_v1.preauthenticateUserAccountResponse_element preauthenticateUser_v1(String UserName,String Password) {
            LDAP_CDM_Operations_UserAccount_v1.preauthenticateUserAccountRequest_element request_x = new LDAP_CDM_Operations_UserAccount_v1.preauthenticateUserAccountRequest_element();
            request_x.UserName = UserName;
            request_x.Password = Password;
            LDAP_CDM_Operations_UserAccount_v1.preauthenticateUserAccountResponse_element response_x;
            Map<String, LDAP_CDM_Operations_UserAccount_v1.preauthenticateUserAccountResponse_element> response_map_x = new Map<String, LDAP_CDM_Operations_UserAccount_v1.preauthenticateUserAccountResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '/Services/UserAccount_v1/preauthenticateUser_v1',
              'http://www.auspost.com.au/Schema/CommonDataModel/Operations/UserAccount:v1',
              'preauthenticateUserAccountRequest',
              'http://www.auspost.com.au/Schema/CommonDataModel/Operations/UserAccount:v1',
              'preauthenticateUserAccountResponse',
              'LDAP_CDM_Operations_UserAccount_v1.preauthenticateUserAccountResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x;
        }


        public LDAP_CDM_Operations_UserAccount_v1.queryUserAccountResponse_element queryUserAccount_v1(String UserAccountID,String UserName) {
            LDAP_CDM_Operations_UserAccount_v1.queryUserAccount_element request_x = new LDAP_CDM_Operations_UserAccount_v1.queryUserAccount_element();
            request_x.UserAccountID = UserAccountID;
            request_x.UserName = UserName;
            LDAP_CDM_Operations_UserAccount_v1.queryUserAccountResponse_element response_x = new LDAP_CDM_Operations_UserAccount_v1.queryUserAccountResponse_element();
            Map<String, LDAP_CDM_Operations_UserAccount_v1.queryUserAccountResponse_element> response_map_x = new Map<String, LDAP_CDM_Operations_UserAccount_v1.queryUserAccountResponse_element>();
            response_map_x.put('response_x', response_x);

            System.debug('response_x = ' + response_x );
            System.debug('response_map_x = ' + response_map_x);

            //endpoint_x = 'https://ens8wvborx3nn.x.pipedream.net';
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '/Services/UserAccount_v1/queryUserAccount_v1',
              'http://www.auspost.com.au/Schema/CommonDataModel/Operations/UserAccount:v1',
              'queryUserAccount',
              'http://www.auspost.com.au/Schema/CommonDataModel/Operations/UserAccount:v1',
              'queryUserAccountResponse',
              'LDAP_CDM_Operations_UserAccount_v1.queryUserAccountResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x;
        }


        public LDAP_CDM_Operations_UserAccount_v1.lockUserAccountResponse_element lockUserAccount_v1(String UserAccountID) {
            LDAP_CDM_Operations_UserAccount_v1.lockUserAccount_element request_x = new LDAP_CDM_Operations_UserAccount_v1.lockUserAccount_element();
            request_x.UserAccountID = UserAccountID;
            LDAP_CDM_Operations_UserAccount_v1.lockUserAccountResponse_element response_x;
            Map<String, LDAP_CDM_Operations_UserAccount_v1.lockUserAccountResponse_element> response_map_x = new Map<String, LDAP_CDM_Operations_UserAccount_v1.lockUserAccountResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '/Services/UserAccount_v1/lockUserAccount_v1',
              'http://www.auspost.com.au/Schema/CommonDataModel/Operations/UserAccount:v1',
              'lockUserAccount',
              'http://www.auspost.com.au/Schema/CommonDataModel/Operations/UserAccount:v1',
              'lockUserAccountResponse',
              'LDAP_CDM_Operations_UserAccount_v1.lockUserAccountResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x;
        }


    }

     */
        
}