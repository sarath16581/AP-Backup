<apex:component controller="Tab_Con">
    <apex:attribute name="importCSS" description="By default the value is set to true,set the value to false if you dont want to laod the default jQuery CSS" default="true" type="Boolean"/>
   <apex:attribute name="tabGroupName" description="the main component" type="String" />
    <apex:outputPanel styleClass="custJQTabs">
        <div id="{!tabGroupName}">
            <apex:componentBody />
        </div>
    </apex:outputPanel>
    
    <script>
        document.addEventListener('DOMContentLoaded',function(){
             scriptManager(loadTabs);
        });

        var callBack;
        function scriptManager(callbackFn){
            
            if(callBack == null){
                callBack = callbackFn;
            }
            if (typeof jQuery !== 'undefined'){ 
               $j = jQuery.noConflict();
               
               if({!importCSS} == true || $j('link[href$="custom.min.css"]').length == 0){
                    //$j('<link rel="stylesheet" type="text/css" href="{!$Resource.bootstrapCSS}" >').appendTo("head");
                    $j('<link rel="stylesheet" type="text/css" href="{!$Resource.bootstrapCSS}" >').appendTo("head");
                }
               
               if(jQuery.ui){
                    loadTabs();                   
                }
                else{
                    loadScript('{!$Resource.bootstrapCSS}',callBack);
                }
            }
            else{
                loadScript('{!$Resource.bootstrapCSS}',scriptManager);
            }
        }
        
        function loadScript(url, callback){
           window.console&&console.log(url);
            /*adding the script tag to the head as suggested before*/
           var head = document.getElementsByTagName('head')[0];
           var script = document.createElement('script');
           script.type = 'text/javascript';
           script.src = url;
        
           /*then bind the event to the callback function*/ 
           /*there are several events for cross browser compatibility*/
           script.onreadystatechange = callback;
           script.onload = callback;
        
           /*fire the loading*/
           head.appendChild(script);
        }
        
        function loadTabs(){
            var tab = $j('<ul></ul>');
            $j.each($j("ul.easyTab9 > li"),function(){
                tab.append(this);
            });
            $j('ul.easyTab9').remove();
            $j( "#{!tabGroupName}" ).prepend(tab).tabs();
        };
        
    </script>
    <style>
        .easyTab9{display : none}
        .easyTabBody9{display :none}
            .ui-widget-header {
       background: #cccccc;
       border: 1px solid #cccccc;
    }
    </style>
</apex:component>