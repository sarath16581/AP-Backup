<!--
    2017-09-17 nathan.franklin@auspost.com.au Fixed jQuery bugs from reducing jQuery versions down to 1
    2018-11-07 nathan.franklin@auspost.com.au Changed the name of searchContactOpenTab to searchContactOpenTabAdvanced as it was conflicting with other components
    2019-12-06 Shashwat.Nath@auspost.com.au - added getsessionid() in relation to MW0003688   to aloo session id to be passed during API calls
-->
<apex:component controller="AdvancedSearchContactComponentController">

    <c:LoadingSpinnerComponent showFunctionName="searchContactShowProgressAdv" hideFunctionName="searchContactHideProgressAdv"  />

    <script type="text/javascript">

        var j$ = jQuery.noConflict();
        var startSearchTime;

        //avoid some block down on IE8 and below
        if(!window.console) {
            var console = {};
            console.log = function () {};
        }

        var contactLoadingInfoAdv = {
            showLoading : function(){
                j$('#' + this.waitDivId).show();
                j$('#' + this.bgId).height(100 + j$('#ADVsearchPanelAdvanced').height()).show();
            },
            hideLoading : function(){
                j$('#' + this.waitDivId).hide();
                j$('#' + this.bgId).hide();
            }
        };

        function initLoadingElementsAdv() {
            var $elem = j$('#ADVsearchPanelAdvanced');
            var waitDiv = $elem.find('[id*="_WaitingDiv"]');
            waitDiv.children('[class*="WaitingBackground"]').attr('id','loadingadv__bg_div').attr('class','WaitingBackground').appendTo($elem);
            waitDiv.appendTo($elem);
            contactLoadingInfoAdv.waitDivId = waitDiv.attr('id');
            contactLoadingInfoAdv.bgId = 'loadingadv__bg_div';
            contactLoadingInfoAdv.init = true;
        }

        function searchContactShowProgressAdv() {
            j$('[id$="advancedresultsdetail"]').find('.mainTitle').text('');
            if(!contactLoadingInfoAdv.init){
                initLoadingElementsAdv();
            }
            contactLoadingInfoAdv.showLoading();
            startSearchTime = Date.now();
        }

        function searchContactHideProgressAdv() {
            if(!contactLoadingInfoAdv.init){
                initLoadingElementsAdv();
            }
            contactLoadingInfoAdv.hideLoading();
            var text = j$('[id$="advancedresultsdetail"]').find('.mainTitle').text();
            j$('[id$="advancedresultsdetail"]').find('.mainTitle').text(text + ' [in ' + (Date.now()-startSearchTime) / 1000 + ' s]');
        }

        function searchContacts() {
            searchContactShowProgressAdv();

            var Parameter1 = j$('[id$="Parameter1"]');
            var Parameter2 = j$('[id$="Parameter2"]');

            var Parameter3 = j$('[id$="Parameter3"]');
            var Parameter4 = j$('[id$="Parameter4"]');
            var combinedString = Parameter1.val().trim()
                    + Parameter2.val().trim()
                    + Parameter3.val().trim()
                    + Parameter4.val().trim();

            /*
            console.log('####txtAccountNo.val: ' + txtAccountNo.val().trim());
            console.log('####Parameter1.val().trim()  ' + Parameter1.val().trim() );
            console.log('####Parameter2.val().trim() ' + Parameter2.val().trim());
            console.log('####addressString: ' + addressString);
            console.log('####txtEmail.val().trim() ' + txtEmail.val().trim());
            console.log('####Parameter3.val().trim()  ' + Parameter3.val().trim() );
            console.log('####txtSocialKeys.val().trim() ' + txtSocialKeys.val().trim());
            console.log('####txtAccountName.val().trim() ' + txtAccountName.val().trim());

            console.log('####id: ' + '{!id}');
            console.log('####combinedString: ' + combinedString);
            */
            if (combinedString.length >= 2 && (//Parameter1.val().trim() != '' ||
                    Parameter2.val().trim() != ''
                    || Parameter3.val().trim() != '')) {

                searchContactHideMessageAdv();
                j$('#pnlresultsAdvanced').show();
                jSearchContacts();
            } else {
                searchContactShowMessageAdv("Please enter at least one contact search criteria.");
                searchContactHideProgressAdv();
            }
        }

        function appendContent123( result ){
            var tBody = j$('[id$="pnlresultsAdvanced"]').find('.list').find('tbody');

            tBody.empty();
            for( i=0; i < result.length; i++){
                var recContact = result[i];
                var classDefintion = 'dataRow';
                classDefintion += (i == 0 ? ' first' : '');
                classDefintion += (i == result.length-1 ? ' last' : '');
                classDefintion += (i % 2 == 0 ? ' even' : ' odd');
                var checked = ( recContact.contact.IsDuplicate__c == true ? "Checked" : '' );
                var decodedText = j$("<p/>").html(recContact.contact.ServiceType__c).text();

                var BillingAcc = (recContact.contact.billingAccount__c != null ? '<a href="#" onclick="searchContactOpenTabAdvanced(\''+recContact.contact.billingAccount__r.id+'\'); return false;">'+recContact.contact.billingAccount__r.name+'</a> '+(recContact.contact.billingAccount__r.LEGACY_ID__c != null ? recContact.contact.billingAccount__r.LEGACY_ID__c : '' ) +' <br />' : '');

                //Table row with matching Contact Id does not exist
                console.log('recContact.contact.ServiceType__c : '+recContact.contact.ServiceType__c);
                tBody.append(j$("<tr class='" + classDefintion + "' onmouseover='if (window.hiOn){hiOn(this);}' onmouseout='if (window.hiOff){hiOff(this);}' onblur='if (window.hiOff){hiOff(this);}' onfocus='if (window.hiOn){hiOn(this);}' id='" + recContact.contact.Id + "'>").append([
                            j$('<td class="dataCell">').append(decodedText),
                            j$('<td class="dataCell">').append('<a href="#" onclick="searchContactOpenTabAdvanced(\''+recContact.contact.Id+'\'); return false;">'+recContact.contact.Name+'</a>'),
                            j$('<td class="dataCell">').append((recContact.contact.CRMCSSOID__c != null ? '<img src="/img/icon/custom51_100/keys16.png" />' : '')+
                                    (recContact.contact.LevelOfAssurance__c != null && recContact.contact.LevelOfAssurance__c >= '{!minLOA}' ? '<img src="/img/func_icons/util/lock12.gif"/>' : '')),
                            j$('<td class="dataCell">').append((recContact.contact.Account != null ? (recContact.contact.Account.IsPersonAccount == true ? recContact.contact.Account.RecordType.Name : '<a href="#" onclick="searchContactOpenTabAdvanced(\''+recContact.contact.Account.Id+'\'); return false;">'+recContact.contact.Account.Name+'</a> '+(recContact.contact.Account.ABN__c != null ? recContact.contact.Account.ABN__c : '' )+' <br/>'+BillingAcc) : '')),
                            j$('<td class="dataCell">').append((recContact.contact.Phone == null ? '' : 'Phone: ' + recContact.contact.Phone +' </br>') +
                                    (recContact.contact.HomePhone == null ? '' : 'Home: ' + recContact.contact.HomePhone +' </br>') +
                                    (recContact.contact.VerifiedMobile__c == null ? '' : 'Verified Mobile: ' + recContact.contact.VerifiedMobile__c +' </br>') +
                                    (recContact.contact.MobilePhone == null ? '' : 'Mobile: ' + recContact.contact.MobilePhone +' </br>') +
                                    (recContact.contact.Email == null ? '' : 'Email: ' + recContact.contact.Email +' </br>') ),
                            j$('<td class="dataCell">').append('<span>' + (recContact.contact.MailingStreet == null ? '' : recContact.contact.MailingStreet + '&nbsp') + (recContact.contact.MailingStreet2__c == null ? '' : recContact.contact.MailingStreet2__c + '&nbsp </br>') + (recContact.contact.MailingCity == null ? '' : recContact.contact.MailingCity + '&nbsp') +
                                    (recContact.contact.MailingState == null ? '' : recContact.contact.MailingState + '&nbsp') + (recContact.contact.MailingPostalCode == null ? '' : recContact.contact.MailingPostalCode + '&nbsp </br>') +
                                    (recContact.contact.MailingCountry == null ? '' : recContact.contact.MailingCountry) + '</span>'),
                            j$('<td class="dataCell">').append('<span style='+(parseInt(recContact.numberOfOpenCases) > 0 ? "font-weight:bold;margin-top:5px;" : "margin-top:5px;" )+'>Open: ' + recContact.numberOfOpenCases +' / Total: ' + (parseInt(recContact.numberOfOpenCases) + parseInt(recContact.numberOfClosedCases)) + '<br></span>'),
                            j$('<td class="dataCell">').append('<input type="checkbox" '+checked+' onchange="changeIsDuplicate(this,\''+recContact.contact.Id+'\');return false;" />'),
                        ])
                );
            }
        }

        function RemoteSearchContactsAdv(){
            searchContactShowProgressAdv();

            //var Parameter1 = j$('[id$="Parameter1"]');
            var Parameter2 = j$('[id$="Parameter2"]');
            var Parameter3 = j$('[id$="Parameter3"]');
            var Parameter4 = j$('[id$="Parameter4"]');

            var combinedString = Parameter2.val().trim() + Parameter3.val().trim()
                    + Parameter4.val().trim();

            if (combinedString.length >= 2 && ((Parameter2.val().trim() != '' && Parameter3.val().trim() != '')
                    || (Parameter2.val().trim() != '' && Parameter4.val().trim() != ''))) {
                console.log('combinedString : '+combinedString );
                searchContactHideMessageAdv();
                j$('#pnlresultsAdvanced').show();
                Visualforce.remoting.Manager.invokeAction(
                        '{!$RemoteAction.AdvancedSearchContactComponentController.searchCustomerREST}',
                        //Parameter1.val().trim(),
                        Parameter2.val().trim(),
                        Parameter3.val().trim(),
                        Parameter4.val().trim(),
                        function(result, event){
                            if(event.type === 'exception')
                                searchContactShowMessageAdv( event.message ); else
                            {
                                if( result === null || result.length == 0){
                                    j$('[id$="advancedresultsdetail"]').find('.mainTitle').text('Found 0 Contact Record(s)');
                                    var tBody = j$('[id$="pnlresultsAdvanced"]').find('.list').find('tbody');
                                    tBody.empty();
                                } else {
                                    j$('[id$="advancedresultsdetail"]').find('.mainTitle').text( 'Found ' + result.length + ' Contact Record(s)');
                                    appendContent123( result );
                                }
                            }
                            searchContactHideProgressAdv();
                        });
            } else {
                searchContactShowMessageAdv("Please enter PO Box Number and at least one other search criteria.");
                searchContactHideProgressAdv();
            }
        }

        function searchContactShowMessageAdv(msg) {
            j$("#pnlAdvancedSearchContactMessage .messageText").html(msg);
            j$('#pnlAdvancedSearchContactMessage .message').show();
            j$('#pnlAdvancedSearchContactMessage').show();
        }

        function searchContactHideMessageAdv() {
            j$("#pnlAdvancedSearchContactMessage .messageText").html("");
            j$('#pnlAdvancedSearchContactMessage').hide();
        }

        function jClearSearch123() {
            j$('#pnlresultsAdvanced').hide();
            searchContactHideMessageAdv();

            // var Parameter1 = j$('[id$="Parameter1"]');
            var Parameter2 = j$('[id$="Parameter2"]');

            var Parameter3 = j$('[id$="Parameter3"]');
            var Parameter4 = j$('[id$="Parameter4"]');

            //Parameter1.val('');
            Parameter2.val('');
            Parameter3.val('');
            Parameter4.val('');
            var tBody = j$('[id$="pnlresultsAdvanced"]').find('.list').find('tbody');

            tBody.empty();

        }


        function isCharacterKeyPress(event) {
            /*
            console.log('key code = ' + event.keyCode);
            console.log('char code = ' + event.charCode);
            console.log('which code = ' + event.which);
            */
            var result = event.keyCode == 8 || (!event.ctrlKey && !event.metaKey && !event.altKey && event.which !== 0 && event.charCode !== 0);
            //console.log('result from keydown = ' + result);
            return result;
        }

        function changeIsDuplicate(el, contactId) {
            sforce.connection.sessionId='{!GETSESSIONID()}'; 
            var ct = new sforce.SObject('Contact');
            ct.id = contactId;
            ct.IsDuplicate__c = el.checked;
            sforce.connection.update([ ct ]);
        }

        function searchContactOpenTabAdvanced(rId) {
            sforce.console.getPrimaryTabIds(function(result){
                j$.each(result.ids, function(index, value) {
                    sforce.console.getPageInfo(value, function(l){
                        var pageInfo = j$.evalJSON(l.pageInfo);
                        if(pageInfo != null && pageInfo.objectId != null && rId.indexOf(pageInfo.objectId) > -1){
                            sforce.console.focusPrimaryTabById(value);
                        }
                    });
                });
                sforce.console.openPrimaryTab(null, '/' + rId, true);
            });
        }

        function {!id}_checkInput(){
            var key = event.keyCode || event.charCode;
            if( key == 8 || key == 46 ) {
                {!id}_addressChanged();
            }
        }

        function setFlag(flag) {
            j$('#isNewSearchFlag').find('input').val(flag);
        }

        var itsMe = false;

    </script>
    <style>
        .ADVsearchPanelAdvanced .bPageBlock .pbBody .dataCol {vertical-align:top;}

        .addressButtonExpanded {
            background: url("/img/support/caseinteraction/pluses_sprite.png") no-repeat 0 -32px;
        }

        .addressButtonExpanded:hover {
            background: url("/img/support/caseinteraction/pluses_sprite.png") no-repeat 0 -48px;
        }

        .addressButtonCollapsed {
            background: url("/img/support/caseinteraction/pluses_sprite.png") no-repeat 0 0px;
        }

        .addressButtonCollapsed:hover {
            background: url("/img/support/caseinteraction/pluses_sprite.png") no-repeat 0 -16px;
        }

        .addressButton {
            cursor: pointer;
            float: right;
            width: 65px;
            margin-right: 0;
            height: 15.5px;
        }

        .icon {
            margin-right: 5px;
            display: inline-block;
            vertical-align : middle;
            width: 16px;
            height: 16px;
        }
        .icon-med {
            width: 16px;
            height: 16px;
            background-size: 16px;
        }

        .contactIcon {
            background-image: url(/img/icon/profile24.png);
            margin-right: 5px;
            display: inline-block;
            vertical-align : middle;
            width: 16px;
            height: 16px;
        }
        .consumerIcon {
            background-image: url(/resource/SSSWIcons/icon-segment_consumer_24px.png);
        }
        .enterpriseIcon {
            background-image: url(/resource/SSSWIcons/icon-segment_enterprise_24px.png);
        }
        .smbIcon {
            background-image: url(/resource/SSSWIcons/icon-segment_smb_24px.png);
        }
        .consumerSMBIcon {
            background-image: url(/resource/SSSWIcons/icon-segment_smb_consumer_24px.png);
        }
        .consumerSocialIcon {
            background-image: url(/resource/SSSWIcons/icon-segment_smb_social_24px.png);
        }
        .vipIcon {
            background-image: url(/resource/SSSWIcons/vip.png);
        }

        .contact-pagination{margin-bottom: 10px;}
        .contact-pagination td{height:30px;vertical-align:middle;}
        .pagination-label{width:200px;text-align:right;font-weight:bold;}
        .pagination-pageindex-td{width:300px;text-align:right;font-weight:bold;}
        .pagination-input{width:80px;text-align:left;}
        .pagination-input input{width:80px;}
        .pagination-input select{width:80px;}
        .page_num {font-size:14px; cursor:pointer;}
        .activeIndex{text-decoration:underline;color:blue;}
        .inactiveIndex{color:#ccc;}
        .hidden{display:none;}
        #loadingadv__bg_div{background-color: black;
            opacity: 0.20;
            filter: alpha(opacity = 20);
            position: absolute;
            width: 100%;
            top: 0;
            left: 0;
            z-index: 9998;}

    </style>
    <div id="pnlAdvancedSearchContactMessage" >
        <apex:pagemessage severity="error" strength="3"
                          summary="There is an error" />
    </div>
    <div class="ADVsearchPanelAdvanced">

        <apex:pageBlock title="Filters" mode="edit" id="pbSearchPanelAdv" >
            <apex:pageBlockButtons location="bottom" id="pbbButtonsAdv">

                <apex:actionfunction id="jSearchContacts" name="jSearchContacts"
                                     action="{!searchForContact}" immediate="false" rerender="advancedresultsdetail" oncomplete="searchContactHideProgressAdv();"  />
                <input type="button" id="btnSearchAdvanced" value="Search" class="btn"
                       onclick="setFlag(true);RemoteSearchContactsAdv();return false;" />
                <!-- <input type="button" id="btnRemoteSearch" value="Remote" class="btn"
                    onclick="setFlag(true);RemoteSearchContactsAdv();return false;" />  -->
                <apex:commandButton id="btnClearSearch" value="Clear" oncomplete="searchContactHideProgressAdv();"
                                    onclick="jClearSearch123();searchContactShowProgressAdv();" immediate="false"
                                    rerender="advancedresultsdetail" action="{!clearSearch}" />&nbsp;
                <span class="hidden" id="isNewSearchFlag">
                <apex:inputHidden value="{!isNewSearch}"/>
            </span>
            </apex:pageBlockButtons>
            <apex:actionRegion >
                <apex:selectList value="{!prodFilter}" required="True" size="1">
                    <apex:selectOptions value="{!FilterOptions}" />
                    <apex:actionSupport event="onchange" reRender="POB" status="statusSaveTrip" oncomplete="jClearSearch123()" action="{!clearSearch}"/>
                    <apex:actionStatus id="statusSaveTrip" stopText="">
                        <apex:facet name="start">
                            <div>
                                <div class="popupBackground" />
                                <div class="PopupPanel">
                                    <table border="0" width="100%" height="100%">
                                        <tr>
                                            <td align="center"><b>Please Wait.....</b></td>
                                        </tr>
                                        <tr>
                                            <td align="center"><img src="{!$Resource.loading32}"/></td>
                                        </tr>
                                    </table>
                                </div>
                            </div>
                        </apex:facet>
                    </apex:actionStatus>
                </apex:selectList>
            </apex:actionRegion>
            <apex:pageBlockSection columns="2" id="POB">

                <apex:pageBlockSectionItem rendered="{!prodFilter=='LNG'}">
                    <apex:outputLabel value="Load and Go Number" for="Parameter2" />
                    <apex:inputText value="{!strFirstname}" id="Parameter2"
                                    tabindex="20" onkeydown="searchContactHideMessageAdv();"
                                    styleClass="form-control input-sm string" />
                </apex:pageBlockSectionItem>


                <apex:pageBlockSectionItem rendered="{!prodFilter=='POB'}">
                    <apex:outputLabel value="{!$Label.AdvancedSearchPOB}" for="Parameter2"/>
                    <apex:inputText value="{!strLastname}" id="Parameter2"
                                    tabindex="30" onkeydown="searchContactHideMessageAdv();"
                                    styleClass="form-control input-sm string" />
                </apex:pageBlockSectionItem>

                <apex:pageBlockSectionItem rendered="{!prodFilter=='POB'}">
                    <apex:outputLabel value="{!$Label.AdvancedSearchOutletName}" for="Parameter3" />
                    <apex:inputText value="{!strPhone}" id="Parameter3" tabindex="70"
                                    onkeydown="searchContactHideMessageAdv();enterpressalert(event, this);"
                                    styleClass="form-control input-sm string" />


                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem rendered="{!prodFilter=='POB'}">
                    <apex:outputLabel value="{!$Label.AdvancedSearchPostcode}" for="Parameter4" />
                    <apex:inputText value="{!strpostalcode}" id="Parameter4" tabindex="80"
                                    onkeydown="searchContactHideMessageAdv();enterpressalert(event, this);"
                                    styleClass="form-control input-sm string" />


                </apex:pageBlockSectionItem>




                <apex:pageBlockSectionItem >
                    <script>
                        function enterpressalert(e, textarea){
                            var code = (e.keyCode ? e.keyCode : e.which);
                            if(code == 13) { //Enter keycode
                                setFlag(true);RemoteSearchContactsAdv();return false;
                            }
                        }
                        function copyToHiddenAddressLine1(el){
                            if({!!expandAddress}){
                                j$('[id$="hfAddressLine1"]').val(j$(el).val());
                            }
                        }


                        function goToPage(pageDiff){
                            if(pageDiff !=1 && pageDiff != -1) {
                                return false;
                            }
                            var $elem, $val;
                            $elem = j$('#currentpageindex').find('input');
                            $val = $elem.val();
                            $val = parseInt($val,10);

                            if($val != 0 && isNaN($val)){
                                return false;
                            }
                            setFlag(false);
                            $val += pageDiff;
                            $elem.val($val);
                            furtherSearch();
                        }
                        function goToPageIndex(pageIndex) {
                            if(pageIndex == 0) return false;
                            setFlag(false);
                            j$('#currentpageindex').find('input').val(pageIndex);
                            furtherSearch();
                        }
                        function furtherSearch() {
                            searchContactShowProgressAdv();
                        }

                    </script>
                </apex:pageBlockSectionItem>
            </apex:pageBlockSection>


            <c:AddressValidation id="cptAddressValidation" styleClass="{!id}_addressValidation" onInit="{!id}_addressChanged"
                                 onselect="{!id}_addressSelected" />
            <!--  <c:AccountLookupComponent id="cptAccountLookupByNumber"
                  assignTo="txtAccountNo" displayAccountNumber="true"
                  onselect="setAccountName" />
              <c:AccountLookupComponent id="cptAccountLookupByName"
                  assignTo="txtAccountName" onselect="setAccountNumber" />  -->

        </apex:pageBlock>
    </div>
    <div id="pnlresultsAdvanced">
        <apex:pageBlock mode="maindetail" id="advancedresultsdetail"
                        title="Found {!totalRecordsNum} Contact record(s)">

            <apex:outputPanel rendered="{!showList}">
                <table class="contact-pagination">
                    <tbody><tr>
                        <td class="pagination-label"></td>

                        <td class="pagination-label"><input type="button" value="< Prev Page" class="btn {!IF(currentPageNum==1,'hidden','')}" onclick="goToPage(-1);"/></td>
                        <td class="pagination-label"><input type="button" value="Next Page >" class="btn {!IF(currentPageNum==totalPageNum,'hidden','')}" onclick="goToPage(1);"/></td>

                        <td class="pagination-pageindex-td">
                            <span class="page_num">Page:</span>
                            <apex:repeat value="{!list_pageNo}" var="pageNum">
                                <span class="page_num {!IF(pageNum == currentPageNum,'inactiveIndex','activeIndex')}" onclick="goToPageIndex({!IF(pageNum == currentPageNum,0,pageNum)});">{!pageNum}</span>
                            </apex:repeat>
                        </td>
                        <td id="currentpageindex"><apex:inputHidden value="{!currentPageNum}"/></td>
                    </tr></tbody>
                </table>
            </apex:outputPanel>

            <apex:pageBlockTable value="{!contacts4Page}" var="o">
                <apex:column >
                    <apex:outputpanel >
                        <apex:facet name="header">Service Type</apex:facet>
                        <!-- Nandan N - 22/07/2015 : Added image field for contact icon -->
                        <apex:outputField value="{!o.contact.ServiceType__c}" id="serviceTypeIcon"/>
                        <!--<div class="{!IF(o.contact.Account.IsVIP__c , 'vipIcon',IF(o.contact.Account.IsPersonAccount,'consumerIcon',IF(o.contact.Account.Role_Type_Roll_Up__c=='Customer',IF(o.contact.Account.ServiceSLA__c=='Enterprise','enterpriseIcon', 'smbIcon'),'consumerSMBIcon')))} icon icon-med"></div> -->
                    </apex:outputpanel>
                </apex:column>
                <apex:column style="vertical-align:top;">
                    <apex:facet name="header">Contact Name</apex:facet>
                    <a href="#" onclick="searchContactOpenTabAdvanced('{!o.contact.id}'); return false;"><apex:outputtext rendered="{!IF(ISBLANK(o.contact.salutation),false,true)}" value="{!o.contact.salutation} "/><apex:outputtext value="{!o.contact.name}" /></a>
                    <br />
                </apex:column>
                <apex:column >
                    <apex:outputpanel rendered="{!IF(o.contact.CRMCSSOID__c != null, 'true', 'false')}">
                        <img src="/img/icon/custom51_100/keys16.png" />
                    </apex:outputpanel>
                </apex:column>
                <apex:column style="vertical-align:top;">
                    <apex:facet name="header">Account Name</apex:facet>

                    <apex:outputpanel rendered="{!IF(o.contact.account.IsPersonAccount, 'true','false')}">{!HtmlEncode(o.contact.account.RecordType.Name)}</apex:outputpanel>
                    <apex:outputpanel rendered="{!IF(o.contact.account.IsPersonAccount, 'false','true')}">
                        <a href="#"
                           onclick="searchContactOpenTabAdvanced('{!o.contact.accountid}'); return false;">{!o.contact.account.name}</a>
                            {!IF(o.contact.account.ABN__c != null,' (' + HtmlEncode(o.contact.account.ABN__c) + ')','')}
                        <br />
                        <a href="#"
                           onclick="searchContactOpenTabAdvanced('{!o.contact.billingAccount__r.id}'); return false;">{!o.contact.billingAccount__r.name}</a>
                            {!IF(o.contact.billingAccount__r.LEGACY_ID__c != null,' (' + HtmlEncode(o.contact.billingAccount__r.LEGACY_ID__c) + ')','')}
                        <br />
                    </apex:outputpanel>
                </apex:column>
                <apex:column style="vertical-align:top;">
                    <apex:facet name="header">Contact Details</apex:facet>
                    <apex:outputText rendered="{!IF(ISBLANK(o.contact.Phone), false, true)}"
                                     value="Phone: {!HTMLENCODE(o.contact.Phone)}<br />"
                                     escape="false">
                    </apex:outputText>
                    <apex:outputText rendered="{!IF(ISBLANK(o.contact.HomePhone), false, true)}"
                                     value="Home: {!HTMLENCODE(o.contact.HomePhone)}<br />"
                                     escape="false">
                    </apex:outputText>
                    <apex:outputText rendered="{!IF(ISBLANK(o.contact.OtherPhone), false, true)}"
                                     value="Other: {!HTMLENCODE(o.contact.OtherPhone)}<br />"
                                     escape="false">
                    </apex:outputText>
                    <apex:outputText rendered="{!IF(ISBLANK(o.contact.MobilePhone), false, true)}"
                                     value="Mobile: {!HTMLENCODE(o.contact.MobilePhone)}<br />"
                                     escape="false">
                    </apex:outputText>
                    <apex:outputText rendered="{!IF(ISBLANK(o.contact.Email), false, true)}"
                                     value="Email: {!HTMLENCODE(o.contact.Email)}<br />"
                                     escape="false" />
                </apex:column>
                <apex:column style="vertical-align:top;">
                    <apex:facet name="header">Mailing Address</apex:facet>
                    <apex:outputText value="{!HTMLENCODE(o.contact.MailingStreet)} {!HTMLENCODE(o.contact.MailingStreet2__c)}<br />"
                                     escape="false" />
                    <apex:outputText value="{!HTMLENCODE(o.contact.MailingCity)} {!HTMLENCODE(o.contact.MailingState)} {!HTMLENCODE(o.contact.MailingPostalCode)}<br />"
                                     escape="false" />
                    <apex:outputText value="{!HTMLENCODE(o.contact.MailingCountry)}<br />"
                                     escape="false" />
                </apex:column>
                <apex:column style="vertical-align:top;">
                    <apex:facet name="header">Case History</apex:facet>
                    <!-- Removing Last Activity Date - REQ0460192 / CR169
                        <apex:outputText value="Last Activity: {0,date,dd/MM/yyyy}<br /><br />"
                        escape="false"
                        rendered="{!NOT(ISBLANK(o.contact.lastActivityDate))}">
                        <apex:param value="{!o.contact.lastActivityDate}" />
                    </apex:outputText>
                    -->
                    <apex:outputText rendered="{!o.numberOfOpenCases > 0}" style="font-weight:bold;margin-top:5px;" value="Open: {!o.numberOfOpenCases} / Total: {!o.numberOfOpenCases + o.numberOfClosedCases}<br />" escape="false" />
                    <apex:outputText rendered="{!o.numberOfOpenCases = 0}" style="margin-top:5px;" value="Open: {!o.numberOfOpenCases} / Total: {!o.numberOfOpenCases + o.numberOfClosedCases}<br />" escape="false" />
                </apex:column>
                <apex:column style="vertical-align:top;">
                    <apex:facet name="header">Is duplicate</apex:facet>
                    <apex:inputcheckbox value="{!o.contact.IsDuplicate__c}"
                                        onchange="changeIsDuplicate(this, '{!o.contact.id}');return false;" />
                </apex:column>
            </apex:pageBlockTable>
            <br />
            <!--  <input type="button" class="btn" id="btnAddCustomer" value="Add as New Contact" onclick="jAddCustomer();"  /> -->
        </apex:pageBlock>
    </div>
    <!-- <c:DefaultSubmitButton targetId="btnSearchAdvanced"/> -->
</apex:component>