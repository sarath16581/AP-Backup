<apex:page controller="OmniBugRedirectController">
	<script>
        /*
        * This is required because there is a bug in SF with clasic service consoles when opening a Subtab with a standard controller and having Omni Channel routing enabled with Tab-based tracking. 
        * Using javascript, if you use sforce.console.openSubtab(...) and passing an URL to another VF page that uses Standard controller. The URL params need to have "id=<objet id>". SF uses this param to load up the record. 
        * However, Omni also uses this param to track for tab changes. Closing the tab will trigger Omni to send another record as it thinks that you have closed the record
        * 
        * Reference: 
        * https://trailblazer.salesforce.com/issues_view?id=a1p3A00000031ySQAQ&title=when-a-custom-vf-page-is-opened-as-a-subtab-of-an-omni-routed-case-closing-that-subtab-frees-up-agent-capacity-and-routed-new-work-to-the-agent
        * https://trailblazer.salesforce.com/issues_view?id=a1p3A000000nbVUQAY
        */
        var currentUrl = new URL(window.location.href);
        var originalUrl = currentUrl.searchParams.get("url");

        var orgDomainUrl = '{!orgDomainUrl}';
        if(originalUrl.startsWith(orgDomainUrl) == true || originalUrl.startsWith('/apex/') == true) {
                location.href = originalUrl;
        } else {
                alert('Unauthorised redirection...');
        }
	
        </script>
</apex:page>