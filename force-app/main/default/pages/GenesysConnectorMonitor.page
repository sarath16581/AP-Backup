<!--
 - @description Genesys CTI Integration Monitor. For tracking and troubleshooting
 - @author Paul Perry
 - @date 2024-04-26
 - @changelog
 -
-->
<apex:page controller="GenesysConnectorController">
  <apex:includeScript value="/support/console/59.0/integration.js"/>
  <apex:includeScript value="{!URLFOR($Resource.GenesysConnector, '/genesysCtiUtils.js')}"/>
  <apex:includeScript value="{!URLFOR($Resource.GenesysConnector, '/genesysCtiMock.js')}"/>
  <apex:includeScript value="{!URLFOR($Resource.GenesysConnector, '/genesysCtiMonitor.js')}"/>

  <style>
	/* Styling for the widget UI which isn't visible to the end-users */
	.align-right {
		margin-left: auto;
		margin-right: 0;
		display: inline;
		right: 12px;
		position: absolute;
	}

	.event-panel {
		width: calc(100% - 7px);
		font-family: monospace !important;
		background-color: #d3d3d387;
	}

	.mock-panel {
		width: calc(100% - 7px);
		font-family: monospace !important;
	}

	.mock-panel[is-dirty="true"] {
		background-color: #ffff003b;
	}

	.mock-panel[has-error="true"] {
		background-color: #ff00003b;
	}

	.proc-list {
		list-style-type: none;
		margin-inline-start: 0px;
		padding-inline-start: 0px;
		display: contents;
	}

	.proc-list > li {
		border: 1px solid #e5e5e5;
		border-radius: .25rem;
		background-clip: padding-box;
		padding: 0;

	}
	.proc-list > li::before {
		content: attr(stamp) "  ";
	}

	li.state-start {
		background-color: rgba(255, 0, 255, .1)
	}

	li.state-success {
		background-color: rgb(255 255 0 / 32%)
	}

	li.state-error {
		background-color: rgba(255, 0, 0, .3)
	}
  </style>

  <script type="text/javascript">
	console.log('Genesys Connector Monitor Widget: init');	
	window.onload = () => initCTIMonitor();
  </script>

  <!--
	Light version of UI for testing and tracking purposes.
	This shouldn't be visible to the end-user once the widget gets hidden
  -->
  <div>
	<label for="mockTxt">Mock CTI Event (drag/drop JSON file below)</label>
	<div>
	  <textarea
		id="mockTxt"
		rows="25"
		class="mock-panel"
		ondrop="handleDrop(event)"
		ondragover="handleDragOver(event)"
		oninput="handleInput(event)"
	  ></textarea>
	  <input id="mockActive" type="checkbox" name="mockActive" onclick="handleClick(event);">
		<label for="mockActive" name="mockActive"> Activate mocking</label>
	  </input>
	  <input id="btnApply" type="button" name="btnApply" value="Apply" onclick="handleClick(event)" class="align-right" title="Extend/overwrite newly incoming events with provided details"/>
	</div>

	<hr/>

	<label for="btnMock">Mock Call flow</label>
	<div style="display: flex;">
	  <input hint="Call state" name="txtState" type="input" value="Idle" readonly="true"/>
	  <input type="button" name="btnMock" value="Start Mock Events" onclick="handleClick(event)" class="align-right" hint="Kick off inbound call event sequence"/>
	</div>
	<textarea
	  id="eventTxt"
	  rows="1"
	  class="event-panel"
	  readonly="true"
	></textarea>

	<hr/>

	<label for="process-list">Processes / State change events</label>
	<div style="max-height: 12rem; overflow-y: auto; width: calc(100% - 7px);">
	  <ul class="proc-list" id="process-list"/>
	</div>

	<hr/>
  </div>
</apex:page>