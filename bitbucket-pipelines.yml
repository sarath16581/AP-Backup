image: php:7.4
pipelines:
    pull-requests:
        feature/*:
            - step:
                  name: Code Analysis
                  script:
                      #grab a copy of the pipeline repository
                      - apt-get update && apt-get install --no-install-recommends -y git
                      - cd /tmp && mkdir pipelines && cd /tmp/pipelines && git clone https://$PIPELINE_REPO_USER:$PIPELINE_REPO_PASS@bitbucket.org/customersystemsteam/pipeline-tools-sfdx.git .
                      - sh /tmp/pipelines/pipeline-orchestrator/feature.sh
            - step:
                  trigger: manual
                  name: Package Build
                  script:
                      - apt-get update && apt-get install --no-install-recommends -y git
                      - cd /tmp && mkdir pipelines && cd /tmp/pipelines && git clone https://$PIPELINE_REPO_USER:$PIPELINE_REPO_PASS@bitbucket.org/customersystemsteam/pipeline-tools-sfdx.git .
                      - sh /tmp/pipelines/pipeline-orchestrator/feature-build.sh
                  artifacts:
                      - dist/**
            - step:
                  trigger: manual
                  name: Deploy/Validate
                  script:
                      - apt-get update && apt-get install --no-install-recommends -y git
                      - cd /tmp && mkdir pipelines && cd /tmp/pipelines && git clone https://$PIPELINE_REPO_USER:$PIPELINE_REPO_PASS@bitbucket.org/customersystemsteam/pipeline-tools-sfdx.git .
                      - sh /tmp/pipelines/pipeline-orchestrator/feature-deploy.sh
                  artifacts:
                      - dist/**
    custom:
        get-ptest:
            - step:
                  size: 2x
                  script:
                      - apt-get update && apt-get install --no-install-recommends -y jq curl git procps
                      - cd /tmp && mkdir pipelines && cd /tmp/pipelines && git clone https://$PIPELINE_REPO_USER:$PIPELINE_REPO_PASS@bitbucket.org/customersystemsteam/pipeline-tools-sfdx.git .
                      # allows us to write back to repository where branch permissions are enabled
                      - export access_token=$(curl -s -X POST -u "${BITBUCKET_OAUTH_CLIENT_ID}:${BITBUCKET_OAUTH_CLIENT_SECRET}" https://bitbucket.org/site/oauth2/access_token -d grant_type=client_credentials -d scopes="repository"| jq --raw-output '.access_token')
                      - cd $BITBUCKET_CLONE_DIR && git remote set-url origin "https://x-token-auth:${access_token}@bitbucket.org/${BITBUCKET_REPO_OWNER}/${BITBUCKET_REPO_SLUG}"
                      - cd /tmp/pipelines/pipeline-orchestrator/ && chmod +x get-env.sh && ./get-env.sh -n "${PTEST_BRANCH_MAPPING}" -c "${PTEST_CLIENT_ID}" -s "${PTEST_CLIENT_SECRET}" -u "${PTEST_USERNAME}" -p "${PTEST_PASSWORD}" -l "${PTEST_LOGIN_URL}" -b "${PTEST_BRANCH_MAPPING}" -d "${BITBUCKET_CLONE_DIR}"
