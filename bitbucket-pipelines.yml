image:
  name: apnathanfranklin/ap-sfdx-pipeline:latest
  username: $DOCKER_HUB_USERNAME
  password: $DOCKER_HUB_PASSWORD
  email: $DOCKER_HUB_EMAIL
pipelines:
    pull-requests:
        feature/*:
            - step:
                  name: Code Analysis and Build
                  script:
                      - bash /root/pipelines/pipeline-orchestrator/feature.sh --clientid dummyvalue --username dummyvalue1 --clientsecret dummyvalue --password dummyvalue --loginurl dummyvalue --gitdestbranch $BITBUCKET_PR_DESTINATION_BRANCH --gitsourcebranch $BITBUCKET_BRANCH --gitpullrequest $BITBUCKET_PR_ID --gitowner $BITBUCKET_REPO_OWNER --gitslug $BITBUCKET_REPO_SLUG --gitusername $GIT_USER --gitpassword $GIT_PASS --src $BITBUCKET_CLONE_DIR
                  artifacts:
                      - dist/**
    custom:
        get-ptest:
            - step:
                  size: 2x
                  script:
                      # allows us to write back to repository where branch permissions are enabled
                      #- export access_token=$(curl -s -X POST -u "${BITBUCKET_OAUTH_CLIENT_ID}:${BITBUCKET_OAUTH_CLIENT_SECRET}" https://bitbucket.org/site/oauth2/access_token -d grant_type=client_credentials -d scopes="repository"| jq --raw-output '.access_token')
                      - cd $BITBUCKET_CLONE_DIR && git remote set-url origin "https://${PIPELINES_GIT_USER}:${PIPELINES_GIT_PASS}@bitbucket.org/${BITBUCKET_REPO_OWNER}/${BITBUCKET_REPO_SLUG}"
                      - cd $BITBUCKET_CLONE_DIR && GIT_SSL_NO_VERIFY=true && git config http.sslVerify false && git remote set-branches --add origin $BITBUCKET_BRANCH && git fetch origin && git checkout $BITBUCKET_BRANCH && git pull
                      - bash /root/pipelines/pipeline-orchestrator/get-env.sh --clientid "${PTEST_CLIENT_ID}" --clientsecret "${PTEST_CLIENT_SECRET}" --username "${PTEST_USERNAME}" --password "${PTEST_PASSWORD}" --loginurl "${PTEST_LOGIN_URL}" --src "${BITBUCKET_CLONE_DIR}"
